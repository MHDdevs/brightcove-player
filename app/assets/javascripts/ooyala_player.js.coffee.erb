#= require airbrake-js-client.min
#= require bowser
#= require airbrake

hideOverlay = ->
  $overlay = $('.video-overlay')
  if $overlay.is(':visible')
    window.player.destroy()
    $overlay.hide()
  return

initVideoOverlay = (element) ->
  $element = element
  ooyalaContentId = $element.data('content-id')
  initTime = parseInt($element.attr('data-content-initial-time')) || 0
  statsUrl = $element.data('content-stats-url') || ''
  skin_file = undefined

  ooyalaEventHandler = (player) ->
    player.mb.subscribe OO.EVENTS.ERROR, 'error', (event, description) ->
      if typeof airbrake != 'undefined'
        airbrake.notify(
          error: 'OoyalaPlayer ' + description
          environment:
            browser: bowser
            url: window.location.href
          context:
            error_type: 'ooyala'
        )
    # Disable store stats while ads playing
    player.mb.subscribe OO.EVENTS.WILL_PLAY_ADS, 'will_play_ads', (eventName) ->
      if statsUrl != ''
        window.storeStats = false
      return
    player.mb.subscribe OO.EVENTS.ADS_PLAYED, 'ads_played', (eventName) ->
      if statsUrl != ''
        window.storeStats = true
      return
    player.mb.subscribe OO.EVENTS.FULLSCREEN_CHANGED, 'fullscreenChanged', (eventName) ->
      resizePlayer()
      return
    player.mb.subscribe '*', 'all_events', (eventName) ->
      if statsUrl != ''
        events = [
          OO.EVENTS.PAUSED
          OO.EVENTS.DESTROY
          OO.EVENTS.ERROR
          OO.EVENTS.SEEKED
          OO.EVENTS.STREAM_PLAYED
          OO.EVENTS.VC_PLAYED
        ]
        hasEvent = events.indexOf(eventName) != -1
        playingEvent = OO.EVENTS.PLAYING == eventName && initTime <= 0

        if window.storeStats == true and (hasEvent || playingEvent)
          updatePlayheadSeconds(Math.floor(player.getPlayheadTime()))
      return

    # user's playback position will be saved if they exit or refresh the page.
    # new playheadSeconds value will not be present in the dom upon refresh
    window.onunload = ->
      if statsUrl != ''
        updatePlayheadSeconds(Math.floor(player.getPlayheadTime()))
      return
    return

  updatePlayheadSeconds = (playheadSeconds) ->
    playheadSeconds = playheadSeconds || 0
    $.ajax
      method: '<%= OoyalaPlayer.stat_method == :patch ? 'PATCH' : 'POST' %>'
      url: statsUrl
      data: <%= OoyalaPlayer.stat_model %>: playhead_seconds: playheadSeconds

  playerParam =
    'pcode': $element.data('pcode')
    'playerBrandingId': $element.data('player-id')
    'skin':
      config: '<%= asset_url "skin.json" %>'
      inline:
        localization:
          defaultLanguage: if OoyalaPlayer.locale in OoyalaPlayer.avaliable_locales then OoyalaPlayer.locale else 'en'
    'videoplaza-ads-manager':
      pulse_host: 'https://uk-mhd.videoplaza.tv'
      pulse_category: '<%= OoyalaPlayer.pulse_category %>'
      pulse_tags: $element.data('pulse-tags')
    'encodingPriority': [
      'hls_drm'
      'hls'
      'dash_drm'
      'dash'
      'mp4'
      'hds'
    ]
    'onCreate': ooyalaEventHandler
    initialBitrate:
      'level': 1.0
      'duration': 30
    initialTime: initTime
    statsUrl: statsUrl
    embedToken: $element.data('signed-embed-code')
  window.storeStats = true
  OO.ready ->
    window.player = OO.Player.create($element.attr('id'), ooyalaContentId, playerParam)
    resizePlayer()


bindPlayer = ->
  if $('body').css('direction') == 'rtl'
    observer = new MutationObserver((mutations) ->
      i = 0
      while i < mutations.length
        j = 0
        while j < mutations[i].addedNodes.length
          if ~mutations[i].addedNodes[j].id.indexOf('OoyalaPingerIFrame')
            mutations[i].addedNodes[j].style.left = 'auto'
            mutations[i].addedNodes[j].style.right = '-5px'
          if mutations[i].addedNodes[j].getAttribute('data') != null and ~mutations[i].addedNodes[j].getAttribute('data').indexOf('https://uk-mhd.videoplaza.tv/proxy')
            mutations[i].addedNodes[j].style.left = 'auto'
            mutations[i].addedNodes[j].style.right = '-9999px'
            mutations[i].addedNodes[j].style.float = 'right'
          ++j
        ++i
      return
)
    config =
      attributes: true
      childList: true
      characterData: true
    observer.observe document.body, config
  $('.play-toggle[data-player-id]').click (event) ->
    event.preventDefault()
    event.stopPropagation()
    elementId = $(this).data('player-id')
    if ~elementId.indexOf('question')
      $('html, body').animate { scrollTop: $('#' + elementId).offset().top - 50 }, 2000
    else
      jsPlayerHandler = $('#' + elementId).find('.js-player-handler')
      initVideoOverlay jsPlayerHandler
      $('.video-overlay#' + elementId).fadeToggle 'fast'
      resizePlayer()
    return
  $('div.video-overlay').click (event) ->
    if event.target != this
      return
    window.player.destroy()
    $(this).hide()
    return
  $('.close-button').click ->
    hideOverlay()
    return
  # Handle ESC key press
  $(document).keyup (event) ->
    if event.keyCode == 27
      hideOverlay()
    return
  return

resizePlayer = ->
  height = $(window).height()
  width = height * 16 / 9
  if width > $(window).width()
    width = $(window).width()
  wrapper = $('.ooyala-wrapper:visible')
  wrapper.innerWidth width
  padding = wrapper.outerWidth() - wrapper.width()
  new_height = $('.ooyala-wrapper:visible .oo-player-skin').outerWidth() * 9 / 16
  margin = (height - new_height - padding) / 2
  wrapper.css 'margin-top', margin + 'px'
  return

window.bindPlayer = bindPlayer
window.resizePlayer = resizePlayer

$ ->
  bindPlayer()


$(window).resize ->
  resizePlayer()
